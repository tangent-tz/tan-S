main {
    const x := 10;
    const y := 5;

    # Basic addition
    const a := 1;
    const b := 2;
    print a + b;  # Output: 3
    print \n;

    # Addition with negative numbers
    const c := -7;
    const d := -3;
    print c + d;  # Output: -10
    print \n;

    # Addition with mixed positive and negative numbers
    const e := 15;
    const f := -2;
    print e + f;  # Output: 13
    print \n;

    # Addition with zero
    const g := 10;
    const h := 0;
    print g + h;  # Output: 10
    print \n;

    # Addition with large numbers
    const i := 999999999;
    const j := 888888888;
    print i + j;  # Output: 1888888887
    print \n;

    # Addition with expressions
#    const expone := (x + y) + 3;
#    print expone;   Output: 18
#    print \n;

#    const exptwo := (x + y) + (x + y);
#    print exptwo;   Output: 30
#    print \n;

    # Addition with zero result
#    const zeroresult := x + (-x);
#    print zeroresult;   Output: 0
#    print \n;

    # Addition with one operand being zero
    const zerooperand := 0 + y;
    print zerooperand;  # Output: 5
    print \n;

    # Addition with both operands being negative
#    const bothnegative := -10 + (-3);
#    print bothnegative;   Output: -13
#    print \n;

    # Addition resulting in a negative value
 #   const negativeresult := -5 + (-10);
 #   print negativeresult;   Output: -15
    #   print \n;

    # Addition involving a large negative value
    const largenegative := -999999 + 888888;
    print largenegative;  # Output: -111111
    print \n;

    # Addition involving expressions and constants
 #   const result := (x * y) + (x + y);
 #   print result;   Output: 70
    #   print \n;

    # Addition involving parentheses and multiple operations
#    const multiops := (x + y) + (x - y) + (x * y);
 #   print multiops;   Output: 40
    #   print \n;
}
