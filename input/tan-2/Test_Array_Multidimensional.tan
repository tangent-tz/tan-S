main {
    var a := [1.1, 2.2, 3, 4, 5]; 
    print a \n [a:1] \n "hello!" \n; 
    
    var ints := [[[1, 2, 3], [4, 5]], [[3, 4], [7, 8, 9]], [[5, 6], [10, 12]]]; 
    print ints \n; 
    
    print [[[1, 2, 3], [4, 5]], [[3, 4], [7, 8, 9]], [[5, 6], [10, 12]]] \n\n; 
    
    #-----------------------------------------------------------------------------
    
    const floats := [[[[1.1, 1.2, 1.3], [1.4, 1.5, 1.6]]], [[[1.7, 1.8], [1.9, 2.1]]]];
    print floats \n; 
    
    print [[[[1.1, 1.2, 1.3], [1.4, 1.5, 1.6]]], [[[1.7, 1.8], [1.9, 2.1]]]] \n\n;
    
    #-----------------------------------------------------------------------------
    
    const strings := [[[["hello", "tanzil", "sarker"], ["it's", "me", "ivy :)"]]], [[["how", "r"], ["u", "??"]]]];
    print strings \n; 
    
    print [[[["hello", "tanzil", "sarker"], ["it's", "me", "ivy :)"]]], [[["how", "r"], ["u", "??"]]]] \n\n;

    #-----------------------------------------------------------------------------
    
    const chars := [['a','b','c','d'],['e', %146]]; 
    print chars \n;
    
    print [['a','b','c','d'],['e', %146]] \n\n; 
    
    #-----------------------------------------------------------------------------
    
    const bools := [[[true, true], [false, false]], [[true, false], [false, true]]];
    print bools \n; 
    
    print [[[true, true], [false, false]], [[true, false], [false, true]]] \n\n; 
    
    
    
    
    #-----------------------------------------------------------------------------
    print \n "LOOP TEST 1:" \n; 
    var x := 0; 
    while (x < 10) {
        var y := [1, 2, 3]; 
        [y:2] := x; 
        print y \n; 
        print y \n; 
        x := x + 1; 
    }
    
    
    
    print \n "LOOP TEST 2:" \n;
    const loopInts := [[[[4, 5, 6]], [[7, 8, 9]]], [[[13, 14, 15]], [[22, 23, 24]]], [[[30, 31]]]]; 
    x := 0; 
    while (x < length loopInts) {
        var outer := [loopInts:x]; 
        print outer \n; 
        
        var j := 0; 
        while (j < length outer) {
            print [outer:j] \n; 
            j := j + 1; 
        }
        print \n; 
        x := x + 1; 
    }
    
    
    
    #---------------------------------------------------------------------------------------
    # TANZIL'S TEST
    {   
        print \n "Tanzil's test:" \n; 
        var boolean := [true,false];
        print boolean \n;
        
        var multiDimBoolean := [[true,false],[false,true]];
        print multiDimBoolean \n;
        
        var integer := [1,2,3];
        print integer \n;
        
        var multiDimInteger := [[1,2,3],[4,5,6]];
        print multiDimInteger \n;
        
        var floatarray := [1.1,2.2,3.3];
        print floatarray \n;
        
        var multiDimFloat := [[1.1,2.2,3.3],[4.4,5.5,6.6]];
        print multiDimFloat \n;
        
        var stringarray := ["hrty67"];
        print stringarray \n;
        
        
        var multiDimString := [["hello","world"],["goodbye","world"]];
        print multiDimString \n;
        
        var multiNestedsameType := [[[[4,5,6]],[[7,8,9]]],[[[13,14,15]],[[22,23,24]]]];
        print multiNestedsameType \n;
        
        var multiNestedFloatType := [[[[[4.5],[5.5],[6.5]]],[[[7.5],[8.5],[9.5]]]],[[[[13.5],[14.5],[15.5]]],[[[22.5],[23.5],[24.5]]]]];
        print multiNestedFloatType \n;
        
        var x := 0;
        while (x < 10) {
            var y := [1,2,3];
            [y:2] := x;
            print y \n;
            x := x + 1;
        }
        
        
        var test := [1];
        print test \n;
        
        var test2 := [[[1]]];
        print test2 \n;
        
        var test3 := [[[1]]];
        
        print test3 \n;
    }
 
}